require_relative "dependencies"
require "selenium/webdriver"
require "selenium/webdriver/remote/http/persistent"

FigNewton.load("staging.yml")

sauce_endpoint = "http://#{FigNewton.sauce_labs.username}:#{FigNewton.sauce_labs.access_key}@ondemand.saucelabs.com:80/wd/hub"

caps = Selenium::WebDriver::Remote::Capabilities.firefox()
caps['platform'] = 'OS X 10.11'
caps['version'] = '45.0'
caps["idleTimeout"] = 300
caps["commandTimeout"] = 300

Capybara.register_driver :firefox do |app|
http_client = Selenium::WebDriver::Remote::Http::Persistent.new
http_client.timeout = 300

Capybara::Selenium::Driver.new(app,
      :browser => :remote,
      :url => sauce_endpoint,
      :desired_capabilities => caps,
      :http_client => http_client)
end

Capybara.default_max_wait_time = 100

# Actions performed before/after each scenario
Before do
  Capybara.default_driver = :firefox
end

# Include helper methods module in each "World" instance
World(HelperMethods)
