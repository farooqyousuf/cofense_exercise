require_relative "dependencies"

# include AllureCucumber::DSL

FigNewton.load('production.yml')

server_url = "http://#{FigNewton.sauce_labs.username}:#{FigNewton.sauce_labs.access_key}@ondemand.saucelabs.com:80/wd/hub"

caps = Selenium::WebDriver::Remote::Capabilities.iphone
caps['deviceName'] = "iPad 2"
caps['platformName'] = 'iOS'
caps['browserName'] = 'Safari'
caps['platformVersion'] ='8.2'
caps['idleTimeout'] = 300
caps['commandTimeout'] = 300
caps['name'] = "pry #{DateTime.now.to_s}"

Capybara.register_driver :ipad do |app|
http_client = Selenium::WebDriver::Remote::Http::Persistent.new
http_client.timeout = 300

Capybara::Selenium::Driver.new(app, {
      :browser => :remote, 
      :url => server_url,
      :desired_capabilities => caps,
      :http_client => http_client})
end

#Capybara.default_driver = :ipad

Capybara.default_max_wait_time = 100

# Actions performed before/after each scenario
Before do
  Capybara.default_driver = :ipad
end

After do
  sign_out_of_idme
end

# Include helper methods module in each 'World' instance
World(HelperMethods)