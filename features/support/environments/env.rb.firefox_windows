require_relative "dependencies"
require "selenium/webdriver"

FigNewton.load("production.yml")

sauce_endpoint = "http://#{FigNewton.sauce_labs.username}:#{FigNewton.sauce_labs.access_key}@ondemand.saucelabs.com:80/wd/hub"

caps = Selenium::WebDriver::Remote::Capabilities.firefox
caps["name"] = "Firefox on Windows 10"
caps["platform"] = "Windows 10"
caps["version"] = "42"

Capybara.register_driver :selenium do |app|
  Capybara::Selenium::Driver.new(app, :browser => :remote, :url => sauce_endpoint, :desired_capabilities => caps)
end

Capybara.default_max_wait_time = 100
Capybara.wait_on_first_by_default = true

# Actions performed before/after each scenario
Before do
  Capybara.default_driver = :selenium
end

After do
  sign_out_of_idme
end

# Include helper methods module in each 'World' instance
World(HelperMethods)
