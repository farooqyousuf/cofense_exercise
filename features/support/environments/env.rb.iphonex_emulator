require_relative "dependencies"
require "selenium/webdriver"

FigNewton.load("staging.yml")

mobile_emulation = { "deviceName" => "iPhone X"}


Capybara.register_driver :chromedriver do |app|
  caps = Selenium::WebDriver::Remote::Capabilities.chrome("chromeOptions" => { "mobileEmulation" => mobile_emulation })

  Capybara::Selenium::Driver.new(app, {
    :browser => :chrome,
    :desired_capabilities => caps})
end

Capybara.default_max_wait_time = 100
# Capybara.wait_on_first_by_default = true

# Actions performed before/after each scenario
Before do
  Capybara.default_driver = :chromedriver
end

After do
  sign_out_of_idme
end

# Include helper methods module in each 'World' instance
World(HelperMethods)
